package demos.fibonacci.scribble;

/**
 * Generated by StMungo
 * Wed Apr 08 17:25:52 BST 2020
 */

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class AMain {
    public static String safeRead(BufferedReader readerA) {
        String readline = "";
        try {
            readline = readerA.readLine();
        } catch (IOException e) {
            System.out.println("Input/Output error, unable to read");
            System.exit(-1);
        }
        return readline;
    }

    public static void main(String[] args) {
        // Create the current role
        ARole currentA = new ARole();
        // readerA can be used to input strings, and then use them in send method invocation
        BufferedReader readerA = new BufferedReader(new InputStreamReader(System.in));
        // Method invocation follows the A typestate
        _Fib:
        do {
            System.out.print("Choose a label among [FIBONACCI, END]: ");
            String sread1 = safeRead(readerA);
            switch (sread1) {
                case "FIBONACCI":
                    currentA.send_FIBONACCIToB();
                    System.out.print("Send to B: ");
                    Long payload1 = /* parse me! */ Long.parseLong(safeRead(readerA));
                    currentA.send_fibonacciLongToB(payload1);
                    Long payload2 = currentA.receive_fibonacciLongFromB();
                    System.out.println("Received from B: " + payload2);
                    continue _Fib;
                case "END":
                    currentA.send_ENDToB();
                    currentA.send_endToB();
                    break _Fib;
            }
        } while (true);
    }
}
