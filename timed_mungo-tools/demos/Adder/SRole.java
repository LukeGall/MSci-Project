package demos.Adder;

/**
 * Generated by StMungo
 * Tue Apr 14 17:42:10 BST 2020
 */
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;

@Typestate("SProtocol")
public class SRole{
    private BufferedReader socketCIn = null;
    private PrintWriter socketCOut = null;
    public SRole() {
        // Connect to the other participants in the protocol
        try {
            // Create the sockets
            Socket socketC = new Socket("localhost", 20000);
            socketCIn = new BufferedReader(new InputStreamReader(socketC.getInputStream()));
            socketCOut = new PrintWriter(socketC.getOutputStream(), true);
        } catch(UnknownHostException e) {
            System.out.println("Unable to connect to the remote host");
            System.exit(-1);
        } catch (IOException e) {
            System.out.println("Input/output error");
            System.exit(-1);
        }
    }

    public SChoice1 receive_SChoice1LabelFromC() {
        String stringLabelSChoice1 = "";
        try {
            stringLabelSChoice1 = this.socketCIn.readLine();
        } catch(IOException e) {
            System.out.println("Input/Outpur error, unable to get label. " + e.getMessage());
            System.exit(-1);
        }
        switch(stringLabelSChoice1) {
            case "ADD":
                return SChoice1.ADD;
            case "BYE":
            default:
                return SChoice1.BYE;
        }
    }

    public Integer receive_AddintFromC() {
        String line = "";
        try {
            line = this.socketCIn.readLine();
        } catch(IOException e) {
            System.out.println("Input/Outpur error. " + e.getMessage());
            System.exit(-1);
        }
        return Integer.parseInt(line);
    }

    public void send_ResintToC(Integer payload) {
        this.socketCOut.println(payload);
    }

    public void receive_ByeFromC() {
        // Nothing to be received
    }
}
