package demos.Traversal;

typestate AProtocol {
	ChoiceA			=	{
							void DATAToB(): {void nodeToB(Node): StateDataToC},
							void NO_DToB(): StateDataToC,
							void ENDToB(): {void ENDToC(): end}
						}

	StateDataToC	=	{
							void DATAToC(): {void nodeToC(Node): ChoiceB},
							void NO_DToC(): ChoiceB
						}

	ChoiceB			=	{
							Choice choiceFromB(): <DATA: {Node nodeFromB(): ChoiceC}, NO_D: ChoiceC, END: ChoiceC>
						}

	ChoiceC			=	{
							Choice choiceFromC(): <DATA: {Node nodeFromC(): ChoiceA}, NO_D: ChoiceA, END: ChoiceA>
						}
}

